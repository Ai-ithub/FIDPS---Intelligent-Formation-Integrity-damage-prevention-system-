services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      kafka_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka     
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT1://KAFKA:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT1://KAFKA:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT1:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  # ðŸª£ MinIO (S3-compatible storage)
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"      # API endpoint
      - "9001:9001"      # Console UI
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin      
      S3_BUCKET: real-time-data
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  # ðŸ§± PostgreSQL for MLflow metadata
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: mehrnoor
      POSTGRES_PASSWORD: mehrnoor
      POSTGRES_DB: mlflowdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres


  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodata:/data/db
  csv-ingestor:
    build: ./csv-ingestor
    depends_on:
      - mongo
      - kafka
      - postgres
    volumes:
      - ./csv-ingestor:/app/csv-ingestor

  validator-service:
    build: ./validator-service
    depends_on:
      - mongo
      - kafka
      - postgres
    volumes:
      - ./validator-service:/app
    working_dir: /app
    command: python validator-service.py
    environment:
      - DISABLE_PANDERA_IMPORT_WARNING=True

  feature-pipeline:
    build: ./feature-pipeline
    container_name: feature-pipeline
    depends_on:
      - postgres
      - minio
    environment:
      - S3_BUCKET=processed-data
    volumes:
      - ./feature-pipeline:/app
  # ðŸš€ MLflow tracking server
  mlflow:
    build: .
    container_name: mlflow
    depends_on:
      - minio
      - postgres
    ports:
      - "5000:5000"
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      BACKEND_STORE_URI: postgresql://mehrnoor:mehrnoor@postgres:5432/mlflowdb
      ARTIFACT_ROOT: s3://mlflow-artifacts
    
    command: >
      mlflow server
      --backend-store-uri postgresql://mehrnoor:mehrnoor@postgres:5432/mlflowdb
      --default-artifact-root s3://mlflow-artifacts
      --host 0.0.0.0
    restart: always

volumes:
  minio-data:
  mongodata:
  pgdata:
  pgadmin-data:
